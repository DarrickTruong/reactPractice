React is just the UI. Focuses only on the View (MVC). 
React interacts with a virtual dom. Increases performance. Selectively renders subtrees of nodes upon state changes
React is simple and intuitive
React can be rendered on both client and server side

Why React?
- Declarative 
- Composable - Reusable Modules
- Fast 

JSX 
- JSX is a syntax extension of javascript
- XML syntax - like
- Concise and Faster 

React component
React.createClass({})
    - render: function() in every component
    - render:function () {
        - should not modify component state. does not read or write from document. should return the same thing each time
        - makes server rendering more practical
    }
    - getInitialState - this.state...
    - getDefaultProps
    - propTypes - validation of props
    - mixins
    - statics
    - displayName
React.render  - where to render (body)
    - Examples
        React.render(what to render(Components, code, or html), where to render(document.body, getElementByID, etc))
        React.render(<h1>Hello World</h1>, document.getElementByID("container")) - with JSX
        React.render(React.createElement('h1', null, 'Hello World'), document.getElementByID("container")) - no JSX

React properties (props) - props is to React as attributes are to html

className - Apply css classes to React content with className (not class)
